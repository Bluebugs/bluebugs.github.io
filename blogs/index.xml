<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Cedric Bail</title><link>http://bluebugs.github.io/blogs/</link><description>Recent content in Blog on Cedric Bail</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 29 Oct 2024 20:49:45 -0600</lastBuildDate><atom:link href="http://bluebugs.github.io/blogs/index.xml" rel="self" type="application/rss+xml"/><item><title>First Post</title><link>http://bluebugs.github.io/blogs/first-post/</link><pubDate>Tue, 29 Oct 2024 20:49:45 -0600</pubDate><guid>http://bluebugs.github.io/blogs/first-post/</guid><description>&lt;p>Let&amp;rsquo;s talk about SuperHs&lt;/p>
&lt;script type='text/javascript' src='https://s3.amazonaws.com/dynatable-docs-assets/js/jquery-1.9.1.min.js'>&lt;/script>
&lt;script type='text/javascript' src='https://s3.amazonaws.com/dynatable-docs-assets/js/jquery.scrollTo.js'>&lt;/script>
&lt;script type='text/javascript' src='https://s3.amazonaws.com/dynatable-docs-assets/js/jquery.toc.min.js'>&lt;/script>
&lt;script type='text/javascript'
 src='https://s3.amazonaws.com/dynatable-docs-assets/js/jquery.sharrre-1.2.0.min.js'>&lt;/script>

&lt;script type='text/javascript' src='https://s3.amazonaws.com/dynatable-docs-assets/js/jquery.dynatable.js'>&lt;/script>

&lt;style type="text/css">
 .horizontal {
 display: inline-flex;
 flex-direction: row;
 justify-content: space-between;
 width: 60%;
 }

 #filter-family {
 order: 1;
 }

 #insns-group {
 order: 2;
 }

 .search {
 order: 3;
 }

 .remember {
 order: 4;
 }

 .remember label {
 display: inline-block;
 padding-right: 10px;
 white-space: nowrap;
 }

 .remember input {
 vertical-align: middle;
 }

 .remember label span {
 vertical-align: middle;
 }

 .vertical {
 display: flex;
 flex-direction: column;
 }

 #horizontal {
 order: -1;
 }

 #instructions {
 flex-grow: 1;
 order: 3;
 }

 #dynatable-record-count {
 order: 2;
 }

 * {
 padding: 3px;
 border: none;
 border-collapse: collapse;
 border-spacing: 0px;
 }

 .top {
 border-top-width: 1px;
 border-top-style: dotted;
 }

 .collapse {
 font-family: monospace;
 white-space: pre-wrap;
 font-size: 11px;
 display: none;
 }

 .header {
 background-color: #D0D0D0;
 }

 .header a {
 color: #000;
 font-size: 18px;
 font-weight: bold;
 font-style: italic;
 }

 .compat {
 font-size: 9px;
 overflow: hidden;
 font-family: monospace;
 color: #000;
 white-space: pre-wrap;
 text-align: left;
 }

 .family {
 font-size: 9px;
 overflow: hidden;
 font-family: monospace;
 color: #808080;
 white-space: pre-wrap;
 text-align: left;
 }

 .family a {
 color: #808080;
 font-size: 13px;
 text-decoration: none;
 }

 pre.code {
 font-size: 11px;
 font-family: monospace;
 }

 .dynatable-record-count {
 color: #808080;
 }
&lt;/style>

&lt;h2>Renesas SH Instruction Set Summary&lt;/h2>

&lt;script type="text/javascript">
 var local_storage = false;
 if (typeof (Storage) !== "undefined") {
 local_storage = true;
 console.log("We do have storage.\n");

 var remember = JSON.parse(window.localStorage.getItem('remember'));
 if (remember === null) {
 remember = new Object();
 }
 } else {
 console.log("we don't have storage :-(\n");
 }

 var itr = 0;
 function update_remember() {
 if (document.getElementById('chk_remember').checked) {
 $('#remember').val(true);
 } else {
 $('#remember').val(false);
 }

 $('#remember').trigger(jQuery.Event('keypress', { which: 13 }));
 }
&lt;/script>

&lt;div class="vertical">
 &lt;div class="horizontal" id="horizontal">
 &lt;div id="filter-family">Family :
 &lt;select id="family" name="family">
 &lt;option>*&lt;/option>
 &lt;option>SH1&lt;/option>
 &lt;option>SH2&lt;/option>
 &lt;option>SH2E&lt;/option>
 &lt;option>SH2A&lt;/option>
 &lt;option>SH3&lt;/option>
 &lt;option>SH3E&lt;/option>
 &lt;option>SH4&lt;/option>
 &lt;option>SH4A&lt;/option>
 &lt;option>DSP&lt;/option>
 &lt;option>J-Core&lt;/option>
 &lt;/select>
 &lt;/div>
 &lt;div id="insns-group">Instructions group :
 &lt;select id="group" name="group">
 &lt;option>*&lt;/option>
 &lt;option>Data Transfer Instructions&lt;/option>
 &lt;option>Bit Manipulation Instructions&lt;/option>
 &lt;option>Arithmetic Operation Instructions&lt;/option>
 &lt;option>Logic Operation Instructions&lt;/option>
 &lt;option>Shift Instructions&lt;/option>
 &lt;option>Branch Instructions&lt;/option>
 &lt;option>System Control Instructions&lt;/option>
 &lt;option>32 Bit Floating-Point Data Transfer Instructions (FPSCR.SZ = 0)&lt;/option>
 &lt;option>64 Bit Floating-Point Data Transfer Instructions (FPSCR.SZ = 1)&lt;/option>
 &lt;option>Floating-Point Single-Precision Instructions (FPSCR.PR = 0)&lt;/option>
 &lt;option>Floating-Point Double-Precision Instructions (FPSCR.PR = 1)&lt;/option>
 &lt;option>Floating-Point Control Instructions&lt;/option>
 &lt;option>DSP Data Transfer Instructions&lt;/option>
 &lt;option>DSP ALU Arithmetic Operation Instructions&lt;/option>
 &lt;option>DSP ALU Logical Operation Instructions&lt;/option>
 &lt;option>DSP Fixed Decimal Point Multiplication Instructions&lt;/option>
 &lt;option>DSP Shift Operation Instructions&lt;/option>
 &lt;option>DSP System Control Instructions&lt;/option>
 &lt;/select>
 &lt;/div>
 &lt;div class="search">Matching regexp :
 &lt;input type="search" id="search" />
 &lt;/div>
 &lt;div class="remember">
 &lt;input type="search" id="remember" value="false" />
 &lt;label>&lt;input type=checkbox id="chk_remember" onclick="update_remember();" />&lt;span>Stared&lt;/span>&lt;/label>
 &lt;/div>
 &lt;/div>
 &lt;table id="instructions">
 &lt;thead class="header" id="top_header">
 &lt;th colspan=3>Compatibility&lt;/th>
 &lt;th>Format&lt;/th>
 &lt;th>Abstract&lt;/th>
 &lt;th>Code&lt;/th>
 &lt;th>T Bits&lt;/br>DC Bits&lt;/th>
 &lt;th colspan=3>Issue cycles&lt;/th>
 &lt;th colspan=3>Latency cycles&lt;/th>
 &lt;script type="text/javascript">
 if (local_storage) {
 document.write("&lt;th data-dynatable-column='remember'>Remember&lt;/th>");
 }
 &lt;/script>
 &lt;/thead>
 &lt;thead class="header">
 &lt;th colspan=7>&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.issue">SH1&lt;/th>
 &lt;th class='family' data-dynatable-column="SH2.issue">SH2&lt;/th>
 &lt;th class='family' data-dynatable-column="SH2E.issue">SH2E&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.issue">SH1&lt;/th>
 &lt;th class='family' data-dynatable-column="SH2.issue">SH2&lt;/th>
 &lt;th class='family' data-dynatable-column="SH2E.issue">SH2E&lt;/th>
 &lt;script type="text/javascript">
 if (local_storage) {
 document.write("&lt;th>&lt;/th>");
 }
 &lt;/script>
 &lt;/thead>
 &lt;thead class="header">
 &lt;th colspan=7>&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.issue">SH2A&lt;/th>
 &lt;th class='family' data-dynatable-column="SH3.issue">SH3&lt;/th>
 &lt;th class='family' data-dynatable-column="SH3E.issue">SH3E&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.issue">SH2A&lt;/th>
 &lt;th class='family' data-dynatable-column="SH3.issue">SH3&lt;/th>
 &lt;th class='family' data-dynatable-column="SH3E.issue">SH3E&lt;/th>
 &lt;script type="text/javascript">
 if (local_storage) {
 document.write("&lt;th>&lt;/th>");
 }
 &lt;/script>
 &lt;/thead>
 &lt;thead class="header">
 &lt;th colspan=7>&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.issue">SH4&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4A.issue">SH4A&lt;/th>
 &lt;th class='family' data-dynatable-column="DSP.issue">DSP&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4.latency">SH4&lt;/th>
 &lt;th class='family' data-dynatable-column="SH4A.latency">SH4A&lt;/th>
 &lt;th class='family' data-dynatable-column="DSP.lantency">DSP&lt;/th>
 &lt;script type="text/javascript">
 if (local_storage) {
 document.write("&lt;th>&lt;/th>");
 }
 &lt;/script>
 &lt;/thead>
 &lt;thead class="header">
 &lt;th colspan=7>&lt;/th>
 &lt;th class='family' data-dynatable-column="J32.issue">J32&lt;/th>
 &lt;th class='family'>&lt;/th>
 &lt;th class='family'>&lt;/th>
 &lt;th class='family' data-dynatable-column="J32.latency">J32&lt;/th>
 &lt;th class='family'>&lt;/th>
 &lt;th class='family'>&lt;/th>
 &lt;script type="text/javascript">
 if (local_storage) {
 document.write("&lt;th>&lt;/th>");
 }
 &lt;/script>
 &lt;/thead>
 &lt;tbody>&lt;/tbody>
 &lt;/table>
&lt;/div>

&lt;script type="text/javascript">
 var cur_opened = null;

 document.getElementById("remember").style.display = "none";

 function on_remember(rowIndex, format, event) {
 var r;

 if (event.defaultPrevented === true)
 return;

 if (remember[format] === true) {
 delete remember[format];
 r = false;
 } else {
 remember[format] = true;
 r = true;
 }

 window.localStorage.setItem('remember', JSON.stringify(remember));

 
 var text = document.getElementById('remember' + rowIndex);
 text.setAttribute('src', remember[format] === true ?
 '/images/star_icon-full.png' :
 '/images/star_icon-empty.png');

 dynatable.settings.dataset.originalRecords[rowIndex].remember = r;

 event.preventDefault();
 }

 function on_mouse_click(rowIndex, event) {
 if (event.defaultPrevented === true)
 return;

 var eh = document.getElementById('hex' + rowIndex);
 var ed = document.getElementById('description' + rowIndex);
 var eo = document.getElementById('operation' + rowIndex);
 var s = window.getSelection();

 if (!s.isCollapsed)
 return;

 if (ed.style.display == 'table-row') {
 if (eh) eh.style.display = 'none';
 ed.style.display = 'none';
 eo.style.display = 'none';
 cur_opened = null;
 }
 else {
 if (eh) eh.style.display = 'table-row';
 ed.style.display = 'table-row';
 eo.style.display = 'table-row';

 if (cur_opened != null) {
 if (cur_opened[0]) cur_opened[0].style.display = 'none';
 cur_opened[1].style.display = 'none';
 cur_opened[2].style.display = 'none';
 }
 cur_opened = [eh, ed, eo];
 }
 }

 function on_mouse_over(rowIndex) {
 var h, d, o;

 document.getElementById('line0.' + rowIndex).style.backgroundColor = "#F0F0F0";
 document.getElementById('line1.' + rowIndex).style.backgroundColor = "#F0F0F0";
 document.getElementById('line2.' + rowIndex).style.backgroundColor = "#F0F0F0";
 document.getElementById('line3.' + rowIndex).style.backgroundColor = "#F0F0F0";

 h = document.getElementById('hex' + rowIndex);
 if (h) h.style.backgroundColor = "#F0F0F0";

 d = document.getElementById('description' + rowIndex);
 if (d) d.style.backgroundColor = "#F0F0F0";

 o = document.getElementById('operation' + rowIndex);
 if (o) o.style.backgroundColor = "#F0F0F0";
 }

 function on_mouse_out(rowIndex) {
 var h, d, o;

 document.getElementById('line0.' + rowIndex).style.backgroundColor = "";
 document.getElementById('line1.' + rowIndex).style.backgroundColor = "";
 document.getElementById('line2.' + rowIndex).style.backgroundColor = "";
 document.getElementById('line3.' + rowIndex).style.backgroundColor = "";

 h = document.getElementById('hex' + rowIndex);
 if (h) h.style.backgroundColor = "";

 d = document.getElementById('description' + rowIndex);
 if (d) d.style.backgroundColor = "";

 o = document.getElementById('operation' + rowIndex);
 if (o) o.style.backgroundColor = "";
 }

 function extract_4c(code) {
 half_bytes = [];

 code = code.replace(' ', '');

 for (var i = 0, length = code.length; i &lt; length; i += 4) {
 half_bytes.push(code.substring(i, i + 4));
 }

 return half_bytes;
 }

 var ConvertBase = function (num) {
 return {
 from: function (baseFrom) {
 return {
 to: function (baseTo) {
 return parseInt(num, baseFrom).toString(baseTo);
 }
 };
 }
 };
 };

 function binary2hex(code) {
 const half_bytes = extract_4c(code);
 hex = [];

 for (const half_byte of half_bytes) {
 if (/^[01]+$/.test(half_byte)) {
 hex.push(ConvertBase(half_byte).from(2).to(16));
 } else if (half_byte === 'nnnn') {
 hex.push('n');
 } else if (half_byte === 'mmmm') {
 hex.push('m');
 } else if (half_byte === 'iiii') {
 hex.push('i');
 } else if (half_byte === 'dddd') {
 hex.push('d');
 } else {
 return null;
 }
 }

 const half_word = extract_4c(hex.join("").toUpperCase());

 return half_word.join(" ");
 }

 var last_group = "";
 function Writer(rowIndex, record, columns, cellWriter) {
 var compat = [
 record.SH1 ? 'SH1' : '-',
 record.SH2 ? 'SH2' : '-',
 record.SH2E ? 'SH2E' : '-',
 record.SH2A ? 'SH2A' : '-',
 record.SH3 ? 'SH3' : '-',
 record.SH3E ? 'SH3E' : '-',
 record.SH4 ? 'SH4' : '-',
 record.SH4A ? 'SH4A' : '-',
 record.DSP ? 'DSP' : '-',
 record.J32 ? 'J32' : '-'
 ];
 var issue = [
 record.SH1 ? record["SH1.issue"] : '-',
 record.SH2 ? record["SH2.issue"] : '-',
 record.SH2E ? record["SH2E.issue"] : '-',
 record.SH2A ? record["SH2A.issue"] : '-',
 record.SH3 ? record["SH3.issue"] : '-',
 record.SH3E ? record["SH3E.issue"] : '-',
 record.SH4 ? record["SH4.issue"] : '-',
 record.SH4A ? record["SH4A.issue"] : '-',
 record.DSP ? record["DSP.issue"] : '-',
 record.J32 ? record["J32.issue"] : '-'
 ];
 var latency = [
 record.SH1 ? record["SH1.latency"] : '-',
 record.SH2 ? record["SH2.latency"] : '-',
 record.SH2E ? record["SH2E.latency"] : '-',
 record.SH2A ? record["SH2A.latency"] : '-',
 record.SH3 ? record["SH3.latency"] : '-',
 record.SH3E ? record["SH3E.latency"] : '-',
 record.SH4 ? record["SH4.latency"] : '-',
 record.SH4A ? record["SH4A.latency"] : '-',
 record.DSP ? record["DSP.latency"] : '-',
 record.J32 ? record["J32.latency"] : '-'
 ];
 var group_start = '';

 if (local_storage) {
 memory = '&lt;td rowspan=4>&lt;a onclick="on_remember(' + rowIndex + ', \'' + String(record.format) + '\', event);">&lt;img id="remember' + rowIndex + '" height=32 width=32 src="http://bluebugs.github.io/images/star_icon-';
 if (remember[String(record.format)] === true) {
 memory += 'full';
 record.remember = true;
 } else {
 memory += 'empty';
 record.remember = false;
 }
 memory += '.png">&lt;/a>&lt;/td>';
 colspan = 14;
 } else {
 memory = '';
 colspan = 13;
 }

 if (record.group != last_group) {
 last_group = record.group;
 group_start = '&lt;tr>&lt;td colspan=' + colspan + '>&lt;br/>&lt;b>' + record.group + '&lt;/b>&lt;br/>&lt;/td>&lt;/tr>';
 }

 record.hex = binary2hex(record.code);
 if (record.hex) {
 hexCode = '&lt;tr class="collapse" id="hex' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">&lt;td colspan=' + colspan + '>&lt;i>&lt;b>Short hexadecimal instruction code:&lt;/i>&lt;/b>&amp;nbsp;' + record.hex + '&lt;/td>&lt;/tr>';
 } else {
 hexcode = '';
 }

 return group_start + '&lt;tr class="top" id="line0.' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">' +
 '&lt;td class="compat">' + compat[0] + '&lt;/td>&lt;td class="compat">' + compat[1] + '&lt;/td>&lt;td class="compat">' + compat[2] + '&lt;/td>' +
 '&lt;td rowspan=4>' + record.format + '&lt;/td>' +
 '&lt;td rowspan=4>' + record.abstract + '&lt;/td>' +
 '&lt;td rowspan=4>&lt;pre>' + record.code + '&lt;/pre>&lt;/td>' +
 '&lt;td rowspan=4>' + record.T + '&lt;/td>' +
 '&lt;td>' + issue[0] + '&lt;/td>&lt;td>' + issue[1] + '&lt;/td>&lt;td>' + issue[2] + '&lt;/td>&lt;' +
 '&lt;td>' + latency[0] + '&lt;/td>&lt;td>' + latency[1] + '&lt;/td>&lt;td>' + latency[2] + '&lt;/td>' + memory + '&lt;/tr>' +
 '&lt;tr id="line1.' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">' +
 '&lt;td class="compat">' + compat[3] + '&lt;/td>&lt;td class="compat">' + compat[4] + '&lt;/td>&lt;td class="compat">' + compat[5] + '&lt;/td>' +
 '&lt;td>' + issue[3] + '&lt;/td>&lt;td>' + issue[4] + '&lt;/td>&lt;td>' + issue[5] + '&lt;/td>' +
 '&lt;td>' + latency[3] + '&lt;/td>&lt;td>' + latency[4] + '&lt;/td>&lt;td>' + latency[5] + '&lt;/td>' +
 '&lt;/tr>&lt;tr id="line2.' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">' +
 '&lt;td class="compat">' + compat[6] + '&lt;/td>&lt;td class="compat">' + compat[7] + '&lt;/td>&lt;td class="compat">' + compat[8] + '&lt;/td>' +
 '&lt;td>' + issue[6] + '&lt;/td>&lt;td>' + issue[7] + '&lt;/td>&lt;td>' + issue[8] + '&lt;/td>' +
 '&lt;td>' + latency[6] + '&lt;/td>&lt;td>' + latency[7] + '&lt;/td>&lt;td>' + latency[8] + '&lt;/td>' +
 '&lt;/tr>&lt;tr id="line3.' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">' +
 '&lt;td class="compat">' + compat[9] + '&lt;/td>&lt;td class="compat">' + '&lt;/td>&lt;td class="compat">&lt;/td>' +
 '&lt;td>' + issue[9] + '&lt;/td>&lt;td>' + '&lt;/td>&lt;td>&lt;/td>' +
 '&lt;td>' + latency[9] + '&lt;/td>&lt;td>' + '&lt;/td>&lt;td>&lt;/td>' +
 '&lt;/tr>' + hexCode +
 '&lt;tr class="collapse" id="description' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">&lt;td colspan=' + colspan + '>&lt;i>&lt;b>Description&lt;/i>&lt;/b>&lt;br/>&lt;pre>' + record.description + '&lt;/pre>&lt;/td>&lt;/tr>' +
 '&lt;tr class="collapse" id="operation' + rowIndex + '" onmouseover="on_mouse_over(' + rowIndex + ');" onmouseout="on_mouse_out(' + rowIndex + ');" onclick="on_mouse_click(' + rowIndex + ', event);">&lt;td colspan=' + colspan + '>&lt;i>&lt;b>Operation&lt;/i>&lt;/b>&lt;pre class="code">' + record.operation + '&lt;/pre>&lt;/td>&lt;/tr>';
 }

 var last_query = "";
 var last_rex = null;
 var dynatable = null;

 $.getJSON("/json/insns.json",
 function (data) {
 dynatable = $('#instructions')
 .bind('dynatable:init', function (e, dynatable) {
 dynatable.queries.functions['family'] = function (record, queryValue) {
 if (queryValue === '*') return true;
 if (queryValue === 'J-Core') return record.J32;
 return record[queryValue] === true;
 };
 dynatable.queries.functions['group'] = function (record, queryValue) {
 if (queryValue === '*') return true;
 return record.group === queryValue;
 };
 dynatable.queries.functions['search'] = function (record, queryValue) {
 if (queryValue.length == 0) return true;

 if (queryValue != last_query) {
 last_query = queryValue;
 last_rex = new RegExp(queryValue);
 }

 var rex = last_rex;
 if (rex.test(record.format)) return true;
 if (rex.test(record.abstract)) return true;
 if (rex.test(record.code)) return true;
 if (rex.test(record.description)) return true;
 if (rex.test(record.operation)) return true;
 if (rex.test(record.group)) return true;
 if (rex.test(record.hex)) return true;

 return false;
 };
 dynatable.queries.functions['remember'] = function (record, queryValue) {
 if (queryValue === "true") {
 if (record.remember) return true;
 return false;
 }
 return true;
 };
 })
 .dynatable({
 features: {
 search: false,
 paginate: false
 },
 writers: {
 _rowWriter: Writer
 },
 dataset: {
 records: data.instructions
 },
 inputs: {
 queries: $('#family, #search, #group, #remember')
 }
 }).data('dynatable');
 });
&lt;/script></description></item></channel></rss>