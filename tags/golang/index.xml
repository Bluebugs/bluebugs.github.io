<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Cedric Bail</title><link>http://bluebugs.github.io/tags/golang/</link><description>Recent content in Golang on Cedric Bail</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 13 Jul 2025 15:00:00 -0700</lastBuildDate><atom:link href="http://bluebugs.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Base64 Decoder - Complete Example</title><link>http://bluebugs.github.io/examples/base64-decoder/</link><pubDate>Sun, 13 Jul 2025 15:00:00 -0700</pubDate><guid>http://bluebugs.github.io/examples/base64-decoder/</guid><description>&lt;p>This is the complete implementation of the base64 decoder discussed in &lt;a href="../../blogs/cross-lane-communication/">Cross-Lane Communication: When Lanes Need to Talk&lt;/a>.&lt;/p></description></item><item><title>IPv4 Parser - Complete Example</title><link>http://bluebugs.github.io/examples/ipv4-parser/</link><pubDate>Sun, 13 Jul 2025 15:00:00 -0700</pubDate><guid>http://bluebugs.github.io/examples/ipv4-parser/</guid><description>&lt;p>This is the complete implementation of the high-performance IPv4 address parser discussed in &lt;a href="../../blogs/go-spmd-ipv4-parser/">Putting It All Together: Fast IPv4 Parsing with SPMD Go&lt;/a>.&lt;/p></description></item><item><title>Putting It All Together</title><link>http://bluebugs.github.io/blogs/go-spmd-ipv4-parser/</link><pubDate>Sun, 13 Jul 2025 14:00:00 -0700</pubDate><guid>http://bluebugs.github.io/blogs/go-spmd-ipv4-parser/</guid><description>&lt;p>Network address parsing is ubiquitous in Go applications, yet the standard library implementations process strings character by character, leaving significant performance on the table. In this comprehensive exploration, we&amp;rsquo;ll combine the SPMD concepts from our &lt;a href="../practical-vector/">previous&lt;/a> &lt;a href="../cross-lane-communication/">blogs&lt;/a> to build a high-performance IPv4 parser inspired by &lt;a href="http://0x80.pl/notesen/2023-04-09-faster-parse-ipv4.html">Wojciech MuÅ‚a&amp;rsquo;s SIMD research&lt;/a>.&lt;/p>
&lt;p>This post demonstrates how SPMD Go could be used to keep code readable, but significantly improve performance by applying the techniques we&amp;rsquo;ve explored: parallel processing, reduction operations, and cross-lane communication. This example is a lot less complex than trying things like base64 and shows the benefit of language-level support for parallel data manipulation in my opinion.&lt;/p></description></item></channel></rss>